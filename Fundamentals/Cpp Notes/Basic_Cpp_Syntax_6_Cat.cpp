#include "Basic_Cpp_Syntax_6_Animal.h"
#include "Basic_Cpp_Syntax_6_Cat.h"


//Bu tanım aynı zamanda  "Cat::Cat : Animal()(){}" anlamında
//yani Animal class'ın Default Constructor  metodunu kullanıyor.
Cat::Cat(){

}

//Cat class'ına gelen _catName parametresini Animal class'a parametre olarak veriliyor. 
//Bu sayede Cat sınıfındaki nesnenin ismi aynı zamanda Animals'a parametre olarak gönderiliyor ki 
// Inherit alınan Animle class'ındaki değişkenlerin durumu da set edilebilsin.
//örnek olarak   "   Cat::Cat(string _catName) : Animal ( _catName) {  
// 
// }
//şeklinde bir metot tanımı yapılarak _catName parametresi aynı zamanda Animal class'ının Constructor metoduna da gönderiliyor.

// Inherit edilen calss'ın tanımı Inherite alan class'ın Constructor tanımına gönderiliyor ki Inherit alınan class'ın da istemleri karşılanabilsin tanımlanıyor
// 
//buradaki ayrıntı Cat sınıfının aynı zamanda Animal class'ını inherit alabilmesi için Animal class'ının özelliklerini de karşılaması gerekiyor gibi bir mantığı var
//Bu nedenle Cat sınıfının Constructor metodunu çağırırken Animal class'ının da Constructur metodunun gereksinimlerini sağlayacak değişkenler parametre olarak alınıyor
Cat::Cat(string _catName, int _catFootCount) : Animal(_catName, _catFootCount) {

	//Burada Constructor içerisinde gerçekleştirilmesi istenen işlemleri ntanımları yapılıyor.
}

void Cat::show() {

	//Cat clas'ı Animal calss'ını inherit aldığı için Protected altında tanımlı değişkene doğrudan erişebilirken
	//Private tanımlı değişkenler için get ve set metotları üzerinden erişilebiliyor
	cout << Cat::catName << " catName Cat görüntüleniyor " << endl;
	cout << Animal::name << " name hayvan görüntüleniyor " << endl;
	cout << Animal::getHeight() << " private tanıml fonksiyon - height" << endl;
	cout << Animal::footCount << " footCount protected hayvan görüntüleniyor" << endl;

}