#include <iostream>
#include "Basic_Cpp_Syntax_6_Animal.h"
#include "Basic_Cpp_Syntax_6_Cat.h"
#include "Basic_Cpp_Syntax_6_Dog.h"


using namespace std;


int main() {

	//Java gibi programalma dillerinde Single Inheritance'a izin verilirken Cpp ve C#üzerinde Multi Inheritance'a izin veriliyor
	Animal* a = new Animal("h1",4);
	cout << "name : " << a->name << endl;
	delete a;


	cout << endl << "--------------------------------" << endl;


	//Inheritance çalışması
	//Inheritance ile Animal class içerisindeki değişken ve fonksiyonları Cat sınıfına devredilmesi sağlanıyor
	Cat cat1("kedicik1", 4);
	//Animal clas'ı Inherit edildiği için Cat nesne tanımı üzerinden Animals calss'ın değişkenlerine ve fonksiyonlarına erişilebiliyor
	cat1.eat();
	cat1.sleep();
	cat1.show();
	cout << "Kedinin ismi: " << cat1.name << endl ;


	cout << endl << "--------------------------------" << endl;


	//Protected çalışması
	//Private altında tanımlı değişkenler için get ve set metotları tanımlanması gerekirken
	//Protected altında tanımlanan değişlkenler aynı class içerisinde ve inherit alan class'lar altından erişilebilir oluyor.
	Cat cat2("Van Kedisi",4);
	cat2.setHeight(150);
	cat2.show();


	cout << endl << "--------------------------------" << endl;


	//statik çalışması -1
	// statik tanımlı değiişkenlerin başlangıç değerleri tanımlı oldukları class'ıniçinde tanımlanıyor.
	//Burada da Dog class'ında tanımlanan statik değişkenin başlangıç değeri Dog class'ının (Basic_Cpp_Syntax_6_Dog.cpp) içinde tanımlandı.
	// |--> Yani Dog clas'ın içinde tanımıyla aynı anlama geliyor
	// 
	//Contructor çağrıldığında bu sayı arttırıldı
	//Destructor çağrıldığınd abu değer azaltıldı. Bu sayede programın herhangi bir anında oluşturulan nesne sayısı öğrenilebilir duruma gelindi.
	Dog dog1("rotvider", 4);
	Dog dog2("pitbull", 4);
	Dog *dog3 = new Dog("pitbull", 4);
	cout << "Köpek sayısı : " << Dog::objectCount << endl;
	delete dog3;
	cout << "Delete sonrası köpek sayısı : " << Dog::objectCount << endl;


	cout << endl << "--------------------------------" << endl;


	//Statik metodlar da tanımlanabiliyor. Sadeve Header dosyasında "static" kelimesi kullanıldı
	//Cpp dosyasında doprudan içeriği tanımlandı ve main fonksiyonda da çağrıldı.
	Dog::Bark();



	return 0;
}


