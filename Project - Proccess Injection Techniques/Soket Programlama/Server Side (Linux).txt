#include <stdio.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>


int main ()
{

    int ServerSocket;
    int ClientSocket;
    struct sockaddr_in ServerAddr;
    char RequestBuffer[500] = "Client connection is success!!"; // Bağlantı sonrası komut göndermek için kullanılıyor
    char ReceiveBuffer[500]; //Bağlantı sonrası gönderilen komutlardan dönüş olmak için kullanılıyor

    ServerSocket = socket(AF_INET, SOCK_STREAM, 0); //TCP Soket oluşturuldu. - https://www.geeksforgeeks.org/socket-programming-cc/  or "man docket" in linux
    ServerAddr.sin_family = AF_INET; //IPv4 
    ServerAddr.sin_port = htons(9001); //Sunucu port numarası
    ServerAddr.sin_addr.s_addr = inet_addr("10.0.2.4"); //Sunucu ip adresi

    bind(ServerSocket, (struct ServerAddr*) &ServerAddr, sizeof(ServerAddr)); // Sunucuya bağlatı - https://man7.org/linux/man-pages/man2/bind.2.html

    listen(ServerSocket, 5); // Tanımlanan socket bilgileriyle aynı anda kurulabilecek bağlantı sayısı

    ClientSocket = accept(ServerSocket, NULL, NULL); // Bağlantı istekleri kabul edilip depolanıyor - https://man7.org/linux/man-pages/man2/accept.2.html - diğer iki parametre boş bırakıldı
    printf("New client is connected!\n");

    send(ClientSocket, RequestBuffer, sizeof(RequestBuffer), 0); // İstemciye komut gönderiliyor - https://man7.org/linux/man-pages/man2/send.2.html
    recv(ClientSocket, ReceiveBuffer, sizeof(ReceiveBuffer), 0); // İstemciden dönen çıktılar ReceiverBuffer'a alınıyor - https://man7.org/linux/man-pages/man2/recv.2.html
    printf("İstemci Çıktı : %s", ReceiveBuffer);
    close(ServerSocket); //İşlem sonrası bağlantı kapatılıyor
    return 0;

}
